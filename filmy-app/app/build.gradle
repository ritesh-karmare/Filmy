plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.firebase.crashlytics'
    id 'com.google.firebase.firebase-perf'
    id 'com.google.gms.google-services'
    id 'dagger.hilt.android.plugin'
}

ext.versionMajor = 5
ext.versionMinor = 1
ext.versionPatch = 2
ext.versionClassifier = "dev"
ext.isDevelopment = false
ext.minimumSdkVersion = 21
ext.targetSdkVersion = 33

android {

    compileSdkVersion 33

    defaultConfig {
        applicationId "rk.entertainment.filmy"

        minSdkVersion project.ext.minimumSdkVersion
        targetSdkVersion project.ext.targetSdkVersion

        versionCode generateVersionCode()
        versionName generateVersionName()

        // multiDexEnabled true

//        buildConfigField 'String', "API_KEY", API_KEY
//        buildConfigField 'String', "YOUTUBE_API_KEY",YOUTUBE_API_KEY

        defaultPublishConfig 'release'
        publishNonDefault true

    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

}

dependencies {

    implementation(project(":feature:movieListing"))
    implementation(project(":feature:movieDetails"))
    implementation(project(":feature:search"))
    implementation(project(":data"))
    implementation(project(":domain"))
    implementation(project(":common"))

    implementation Dependencies.appCompat

    // OkHttp, Retrofit and Gson networking libraries
    implementation Dependencies.okHttp
    implementation Dependencies.ohHttpLogginInterceptor
    implementation Dependencies.rxJava
    implementation(Dependencies.retrofit)
            { exclude module: 'okhttp' }

    implementation Dependencies.gsonConverter
    implementation Dependencies.gson

    // Coroutines, ViewModel, LiveData
    implementation Dependencies.coroutines
    implementation Dependencies.viewModel
    implementation Dependencies.liveData
    implementation Dependencies.lifeCycleKtx

    implementation Dependencies.hilt
    kapt Dependencies.hiltCompilerKapt
}

//  Generate Version Code
private Integer generateVersionCode() {
    return ext.minimumSdkVersion * 10000000 + ext.versionMajor * 10000 + ext.versionMinor * 100 + ext.versionPatch
}

//Generate Version Name
private String generateVersionName() {
    String versionName = "${ext.versionMajor}.${ext.versionMinor}.${ext.versionPatch}"
    if (ext.versionClassifier != null && ext.isDevelopment) {
        versionName += "-" + ext.versionClassifier
    }
    return versionName
}
